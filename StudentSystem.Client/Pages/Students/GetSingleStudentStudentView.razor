@page "/student-view"

@using StudentSystem.Client.Services.AuthServices
@using StudentSystem.Client.Services.StudentServices
@using StudentSystem.Client.Services.UserServices

@inject HttpClient Http
@inject IClientStudentService clientStudentService
@inject IClientAuthService ClientAuthService
@inject IClientUserService ClientUserService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<h3>GetSingleStudent</h3>

@student.Address
@userRole

<EditForm Model="student" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <MudCard>
      
        
        <MudCardContent>
            <MudTextField Label="FirstName" @bind-Value="@student.FirstName"
                          For="@(() => student.FirstName)">
            </MudTextField>
            <p>@userId</p>
            <MudTextField Label="LastName" @bind-Value="@student.LastName"
                          For="@(() => student.FirstName)">
            </MudTextField>
            <MudTextField Label="Contact" @bind-Value="@student.Contact"
                          For="@(() => student.Contact)">
            </MudTextField>
            <MudTextField Label="Address" @bind-Value="@student.Address"
                          For="@(() => student.Address)">
            </MudTextField>
            <MudTextField Label="BirthDate" @bind-Value="@student.BirthDate"
                          For="@(() => student.BirthDate)">
            </MudTextField>
            <MudImage Src="@student.Image" Elevation="25" Class="rounded my-2"></MudImage>
            <br />
            <InputFile id="fileInput" OnChange="OnFileChange" hidden />
            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.CloudUpload"
                       for="fileInput">
                Upload Image
            </MudButton>
        </MudCardContent>
    </MudCard>
    <br />

    <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled" Class="mr-2">Update Student</MudButton>

</EditForm>


@code {
    [Parameter]
    public int? id { get; set; }

    string btnText = string.Empty;

    bool isNew = true;

    public Student student = new Student();

    public string userId;
    public int studentId;
    public string userRole;

    // protected override async Task OnInitializedAsync()
    // {
    //     userId = await ClientUserService.GetSingleUser();
    //     studentId = await ClientUserService.GetSingleStudent(int.Parse(userId));
    //     student = await clientStudentService.GetSingleStudent(studentId);
    //     userRole = await ClientUserService.GetUserRole();
    // }

    async Task HandleSubmit()
    {
        await clientStudentService.UpdateStudent((int)id, student);
        Snackbar.Add(
            "Update Student Successfully",
            Severity.Success,
        config =>
        {
            config.ShowTransitionDuration = 200;
            config.HideTransitionDuration = 400;
            config.VisibleStateDuration = 2500;
        });
    }



    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 200, 200);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format}; base64, {Convert.ToBase64String(buffer)}";
        student.Image = imageData;
    }

}
