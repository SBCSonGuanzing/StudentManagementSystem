@page "/all-students"

@using StudentSystem.Client.Services.AuthServices
@using StudentSystem.Client.Services.StudentServices

@inject IClientAuthService ClientAuthService
@inject IClientStudentService clientStudentService

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<PageTitle>Students</PageTitle>
<MudText Typo="Typo.h4">Students</MudText>
<br />


<MudTable Items="clientStudentService.students" Hover="true" Striped="true" Dense="true" Class="mb-2">
    <HeaderContent>
        <MudTh>Image</MudTh>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Contact</MudTh>
        <MudTh>Address</MudTh>
        <MudTh>Birth Date</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate Context="userDetails">
        @if(userDetails != null)
        {

            <MudTd DataLabel="Image"><MudAvatar Image="@userDetails.Image"></MudAvatar></MudTd>
            <MudTd DataLabel="FirstName">
                @userDetails.FirstName
            </MudTd>
            <MudTd DataLabel="LastName">
                @userDetails.LastName
            </MudTd>
            <MudTd DataLabel="Contact">
                @userDetails.Contact
            </MudTd>
            <MudTd DataLabel="Address">
                @userDetails.Address
            </MudTd>
            <MudTd DataLabel="Birth Date">
                @userDetails.BirthDate
            </MudTd>
            <MudTd>
                <MudIconButton OnClick="() => editStudent(userDetails.Id)"
                               Icon="@Icons.Material.Filled.Edit"
                               Color="Color.Primary"
                               Variant="Variant.Filled"></MudIconButton>
                
            </MudTd>
        }
        
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled" OnClick="AddStudent">Add Student</MudButton>


@code {

    protected override async Task OnInitializedAsync()
    {
        await clientStudentService.GetAllStudents();
    }

    void AddStudent()
    {
        NavigationManager.NavigateTo("/register");
    }

    void editStudent(int id) => NavigationManager.NavigateTo($"/student/{id}");

    // protected override async Task OnInitializedAsync()
    // {
    //     avatar = await clientAuthService.GetSingleUser();

    // }

   
}
