@page "/all-enrollment"
@using StudentSystem.Client.Services.StudentServices
@using StudentSystem.Shared.Models
@inject IClientStudentService clientStudentService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
<PageTitle>Enrollment</PageTitle>

<h3>Enrollment</h3>

<MudTable Items="clientStudentService.students" Hover="true" Striped="true" Dense="true" Class="mb-2" Filter="new Func<Student,bool>(FilterFunc1)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Students</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Image</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>BirthDate</MudTh>
        <MudTh>Contact</MudTh>
        <MudTh>Address</MudTh>
        <AuthorizeView Roles="Admin">
            <MudTh>Actions</MudTh>
        </AuthorizeView>
        
    </HeaderContent>
    <RowTemplate Context="Student">
            <MudTd DataLabel="Image"><MudAvatar Image="@Student.Image" /></MudTd>
            <MudTd DataLabel="Name">@Student.FirstName @Student.LastName</MudTd>
            <MudTd DataLabel="BirthDate">@Student.BirthDate</MudTd>
            <MudTd DataLabel="Contact">@Student.Contact</MudTd>
            <MudTd DataLabel="Address">@Student.Address</MudTd>
        <AuthorizeView Roles="Admin">
            <Authorized>
                <MudTd>
                    <MudButton OnClick="(() => AddSubject(Student.Id))" 
                                Variant="Variant.Filled"
                                Size = "Size.Small"
                                Color="Color.Primary">Add Subject
                    </MudButton>
                    <MudButton OnClick="(() => ViewDetails(Student.Id))" 
                                Variant="Variant.Filled"
                                Size = "Size.Small"
                                Color="Color.Success">View Details
                    </MudButton>
                </MudTd>
            </Authorized>
        </AuthorizeView>
    </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
</MudTable>
 
<p style="height:500px;"></p>

@code 
    {

    private List<Student> Students = new List<Student>();

    protected override async Task OnInitializedAsync()
    {
        Students = await clientStudentService.GetAllStudents();
    }   

    void AddSubject(int id)
    {
        NavigationManager.NavigateTo($"single-enrollment/{id}");
    }

    void ViewDetails(int id)
    {
        NavigationManager.NavigateTo($"/enrollment-details/{id}");
    }

    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private Student selectedItem1 = null;
    private HashSet<Student> selectedItems = new HashSet<Student>();
    private IEnumerable<Student> Elements = new List<Student>();


    private bool FilterFunc1(Student element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Student element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
      @*   if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
            return true; *@
        return false;
    }

}