@page "/all-users"

@using StudentSystem.Client.Services.AuthServices
@using StudentSystem.Client.Services.UserServices

@inject IClientAuthService clientAuthService
@inject IClientUserService clientUserService
@inject NavigationManager NavigationManager
@inject ISnackbar snackBar

<PageTitle>Users</PageTitle>
<MudText Typo="Typo.h4">Users</MudText>

<MudTable Items="clientUserService.users" Hover="true" Striped="true" Dense="true" Class="mb-2">
    <HeaderContent>
        <MudTh>Image</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Role</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate Context="userDetails">
        @if (userDetails.Role == "Admin")
        {
            <MudTd DataLabel="Image"><MudAvatar Image="@userDetails.Avatar"></MudAvatar></MudTd>
        }
        else if(userDetails.Role == "Student" && userDetails.Student != null) 
        {
            <MudTd DataLabel="Image"><MudAvatar Image="@userDetails.Student.Image"></MudAvatar></MudTd>

        }
        else if (userDetails.Role == "Professor" && userDetails.Professor != null)
        {
            <MudTd DataLabel="Image"><MudAvatar Image="@userDetails.Professor.Image"></MudAvatar></MudTd>
        }

        <MudTd DataLabel="Email">
            @userDetails.Email
        </MudTd>
        <MudTd DataLabel="Role">
            @userDetails.Role
        </MudTd>
        <MudTd>
            <MudIconButton OnClick="() => DeleteUser(userDetails.Id)"
                           Icon="@Icons.Material.Filled.Delete"
                           Color="Color.Error"
                           Variant="Variant.Filled">
            </MudIconButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled" OnClick="RegisterUser">Add User</MudButton>


@code {

    List<User> userDetails = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        userDetails = await clientUserService.GetAllUser();
    }

    void RegisterUser()
    {
        NavigationManager.NavigateTo("/register");
    }

    async void DeleteUser(int id)
    {
        await clientUserService.DeleteUser(id);
        StateHasChanged();
        snackBar.Add(

            "Deleted User Successfully",

            Severity.Success,

            config =>

            {
                config.ShowTransitionDuration = 200;

                config.HideTransitionDuration = 400;

                config.VisibleStateDuration = 2500;

            });
    }
}
